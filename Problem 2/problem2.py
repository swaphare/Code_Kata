# -*- coding: utf-8 -*-
"""Problem2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NgiIJ_dL9u1q3IxfXxS4-wYgIjJQPbRZ
"""

!pip install pyspark
import pandas as pd
from pyspark.sql import SparkSession
from pyspark.sql.functions import sha2

# Problem 2: Data Processing with PySpark
# Generate CSV File

class MyCSVFileGenerator:
    def __init__(self, filename):
  # Sample data to generate the CSV file
        self.filename = filename
        self.data = {
            "first_name": ["John", "Jane"],
            "last_name": ["Doe", "Smith"],
            "address": ["123 Elm Street", "456 Oak Avenue"],
            "date_of_birth": ["1990-01-01", "1985-12-12"]
        }
  # Method to generate the CSV file from the sample data
    def to_generate_csv(self):
        df = pd.DataFrame(self.data)
        df.to_csv(self.filename, index=False)
 # Class to anonymize data in a CSV file using PySpark
class MyDataAnonymizer:
    def __init__(self, input_file, output_file):
        self.input_file = input_file
        self.output_file = output_file
  # Method to anonymize the data using SHA-256 hashing
    def my_data_anonymizer(self):
        spark = SparkSession.builder.appName("DataProcessing").getOrCreate()
        df = spark.read.csv(self.input_file, header=True)
        df = df.withColumn("first_name", sha2("first_name", 256)) \
               .withColumn("last_name", sha2("last_name", 256)) \
               .withColumn("address", sha2("address", 256))
        df.show()
  # Write the anonymized DataFrame to a new CSV file
        df.write.csv(self.output_file, header=True)
        spark.stop()

# Usage
csv_generator = MyCSVFileGenerator("my_input.csv")
csv_generator.to_generate_csv()

anonymizer = MyDataAnonymizer("my_input.csv", "my_output.csv")
anonymizer.my_data_anonymizer()

"""# New Section"""